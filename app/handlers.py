import os
from aiogram import F,Router
from aiogram.filters import CommandStart,Command
from aiogram.types import Message
import app.keyboards as kb
from dotenv import load_dotenv
import app.database.requests as rq
from aiogram.fsm.context import FSMContext
import app.states as st
from app.utils import format_score, generate
load_dotenv()
router = Router()
CEO = list(map(int, os.getenv("CEO", "").split(",")))

@router.message(CommandStart())
async def start_bot(message : Message):
    await message.answer_photo(photo="AgACAgIAAxkBAAIKpWi_xFhV5sMmg3RQaUZvssoRJi-6AAKw_jEbtS0BSonMsR80pDmXAQADAgADeQADNgQ",caption=f"<b>–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ Wordle Russian, {message.from_user.first_name} !</b>\n–î–∞–Ω–Ω—ã–π –±–æ—Ç - –∫–æ–ø–∏—è –æ—Ä–∏–≥–∏–Ω–∞–ª—å–Ω–æ–π –∏–≥—Ä—ã Worlde –Ω–∞ —Ä—É—Å—Å–∫–æ–º —è–∑—ã–∫–µ, —Å –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç—å—é –∏–∑–º–µ–Ω—è—Ç—å –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –∂–∏–∑–Ω–µ–π —á–µ—Ä–µ–∑ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ –∏ –±–µ—Å–∫–æ–Ω–µ—á–Ω—ã–º–∏ —Å–ª–æ–≤–∞–º–∏, —Å–æ–∑–¥–∞—é—â–∏–µ—Å—è –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ —Å –ø–æ–º–æ—â—å—é –Ω–∞—à–µ–≥–æ AI ü§ñ\n–í—ã –º–æ–∂–µ—Ç–µ –æ–∑–Ω–∞–∫–æ–º–∏—Ç—å—Å—è —Å –ø—Ä–∞–≤–∏–ª–∞–º–∏ –∏ –æ—Å—Ç–∞–ª—å–Ω—ã–º–∏ –∫–æ–º–∞–Ω–¥–∞–º–∏ –≤ –º–µ–Ω—é.–ß—Ç–æ–±—ã –Ω–∞—á–∞—Ç—å –º–æ–∂–µ—Ç–µ –Ω–∞–∂–∞—Ç—å –Ω–∞ –∫–Ω–æ–ø–∫—É \"–ò–≥—Ä–∞—Ç—å üïπ\"",reply_markup=kb.base_inline,parse_mode="HTML")
    await message.delete()
    await rq.set_user(message.from_user.id,message.from_user.first_name)

@router.message(F.photo)
async def photo(message : Message):
    await message.answer(message.photo[-1].file_id)

@router.message(Command("profile"))
async def comm_profile(message : Message,state : FSMContext):
    await message.delete()
    id = message.from_user.id
    if await state.get_state() != None:
        await message.answer("–ù–∞ –¥–∞–Ω–Ω—ã–π –º–æ–º–µ–Ω—Ç –≤—ã –≤—ã–ø–æ–ª–Ω—è–µ—Ç–µ –¥—Ä—É–≥—É—é –æ–ø—Ü–∏—é –∏ –Ω–µ –º–æ–∂–µ—Ç–µ –≤–æ—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å—Å—è —ç—Ç–æ–π –∫–æ–º–∞–Ω–¥–æ–π ‚ùå")
        return
    await message.answer(f"<b>–í–∞—à —Ç–µ–∫—É—â–∏–π –ø—Ä–æ—Ñ–∏–ª—å ü•á</b>\n\n–í–∞—à –Ω–∏–∫–Ω–µ–π–º : <b>{await rq.get_name(id)} üë§</b>\n–í–∞—à–µ —á–∏—Å–ª–æ –æ—á–∫–æ–≤ : <b>{await format_score(await rq.get_score(id))} ‚≠êÔ∏è</b>\n–ß–∏—Å–ª–æ –∏–≥—Ä —Å –æ–±—ã—á–Ω—ã–º —Ä–µ–∂–∏–º–æ–º : <b>{await format_score(await rq.get_simple_games(id))} üëæ</b>\n–ß–∏—Å–ª–æ –∏–≥—Ä —Å –±–µ—Å–∫–æ–Ω–µ—á–Ω–æ—Å—Ç—å—é : <b>{await format_score(await rq.get_inf_games(id))} ‚ôæÔ∏è</b>",parse_mode="HTML",reply_markup=kb.base_inline)

@router.message(Command("top"))
async def comm_top(message : Message,state : FSMContext):
    await message.delete()
    id = message.from_user.id
    if await state.get_state() != None:
        await message.answer("–ù–∞ –¥–∞–Ω–Ω—ã–π –º–æ–º–µ–Ω—Ç –≤—ã –≤—ã–ø–æ–ª–Ω—è–µ—Ç–µ –¥—Ä—É–≥—É—é –æ–ø—Ü–∏—é –∏ –Ω–µ –º–æ–∂–µ—Ç–µ –≤–æ—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å—Å—è —ç—Ç–æ–π –∫–æ–º–∞–Ω–¥–æ–π ‚ùå")
        return
    await message.answer(await rq.top(id),parse_mode="HTML")

@router.message(Command("edit_name"))
async def comm_edit_name(message : Message, state : FSMContext):
    await message.delete()
    if await state.get_state() != None:
        await message.answer("–ù–∞ –¥–∞–Ω–Ω—ã–π –º–æ–º–µ–Ω—Ç –≤—ã –≤—ã–ø–æ–ª–Ω—è–µ—Ç–µ –¥—Ä—É–≥—É—é –æ–ø—Ü–∏—é –∏ –Ω–µ –º–æ–∂–µ—Ç–µ –≤–æ—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å—Å—è —ç—Ç–æ–π –∫–æ–º–∞–Ω–¥–æ–π ‚ùå")
        return
    await state.set_state(st.Edit_name.name)
    await message.answer("–°–∫–∏–Ω—å—Ç–µ —Å–ª–µ–¥—É–π—â–∏–º —Å–æ–æ–±—â–µ–Ω–∏–µ–º –≤–∞—à –Ω–æ–≤—ã–π –Ω–∏–∫ üó£\n–ì–ª–∞–≤–Ω–æ–µ –ø—Ä–∞–≤–∏–ª–æ —á—Ç–æ–±—ã –¥–ª–∏–Ω–Ω–∞ –Ω–µ –ø—Ä–µ–≤—ã—à–∞–ª–∞ 10 –±—É–∫–≤ ‚õîÔ∏è" )

@router.message(Command("settings"))
async def comm_settings(message : Message,state : FSMContext):
    await message.delete()
    if await state.get_state() != None:
        await message.answer("–ù–∞ –¥–∞–Ω–Ω—ã–π –º–æ–º–µ–Ω—Ç –≤—ã –≤—ã–ø–æ–ª–Ω—è–µ—Ç–µ –¥—Ä—É–≥—É—é –æ–ø—Ü–∏—é –∏ –Ω–µ –º–æ–∂–µ—Ç–µ –≤–æ—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å—Å—è —ç—Ç–æ–π –∫–æ–º–∞–Ω–¥–æ–π ‚ùå")
        return
    if await rq.is_infinity(message.from_user.id): await message.answer("–ù–∞ –¥–∞–Ω–Ω—ã–π –º–æ–º–µ–Ω—Ç —É –≤–∞—Å –≤–∫–ª—é—á–µ–Ω–∞ –æ–ø—Ü–∏—è –±–µ—Å–∫–æ–Ω–µ—á–Ω—ã—Ö –∂–∏–∑–Ω–µ–π, –∂–µ–ª–∞–µ—Ç–µ –≤—ã–∫–ª—é—á–∏—Ç—å –µ–µ ?",reply_markup=kb.settings_if_6) 
    else: await message.answer("–ù–∞ –¥–∞–Ω–Ω—ã–π –º–æ–º–µ–Ω—Ç —É –≤–∞—Å 6 –∂–∏–∑–Ω–µ–π,–Ω–æ –≤—ã –º–æ–∂–µ—Ç–µ –∏–∑–º–µ–Ω–∏—Ç—å –µ–≥–æ –Ω–∞ –±–µ—Å–∫–æ–Ω–µ—á–Ω–æ—Å—Ç—å, –∂–µ–ª–∞–µ—Ç–µ –∏–∑–º–µ–Ω–∏—Ç—å ?",reply_markup=kb.settings_if_inf)

@router.message(Command("id"))
async def comm_id(message : Message):
    await message.delete()
    await message.answer(f"–í–∞—à –ø–µ—Ä—Å–æ–Ω–∞–ª—å–Ω—ã–π Telegram ID : <b>{message.from_user.id}</b>",parse_mode="HTML")

@router.message(Command("connect"))
async def connect_with_administration(message : Message,state : FSMContext):
    await message.delete()
    if await state.get_state() != None:
        await message.answer("–ù–∞ –¥–∞–Ω–Ω—ã–π –º–æ–º–µ–Ω—Ç –≤—ã –≤—ã–ø–æ–ª–Ω—è–µ—Ç–µ –¥—Ä—É–≥—É—é –æ–ø—Ü–∏—é –∏ –Ω–µ –º–æ–∂–µ—Ç–µ –≤–æ—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å—Å—è —ç—Ç–æ–π –∫–æ–º–∞–Ω–¥–æ–π ‚ùå")
        return
    await message.answer("–ù–∞–ø–∏—à–∏—Ç–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –∫–æ—Ç–æ—Ä–æ–µ –≤—ã —Ö–æ—Ç–∏—Ç–µ –æ—Ç–ø—Ä–∞–≤–∏—Ç—å –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ü–∏–∏ üë®‚Äçüíª",reply_markup=kb.otmena)
    await state.update_data(id=message.from_user.id)
    await state.set_state(st.Mess_to_admin.msg)

@router.message(Command("rules"))
async def comm_rules(message : Message):
    await message.delete()
    await message.answer(
        "<b>–ü—Ä–∞–≤–∏–ª–∞ –∏–≥—Ä—ã –≤ Wordle:</b>\n"
        "–ü–æ—Å–ª–µ –Ω–∞–∂–∞—Ç–∏—è –Ω–∞ –∫–Ω–æ–ø–∫—É ¬´–ò–≥—Ä–∞—Ç—å üïπ¬ª, –±–æ—Ç –≤—ã–±–µ—Ä–µ—Ç –æ–¥–Ω–æ —Å–ª—É—á–∞–π–Ω–æ–µ —Å–ª–æ–≤–æ, —Å–æ—Å—Ç–æ—è—â–µ–µ –∏–∑ 5 –±—É–∫–≤. "
        "–í–∞—à–∞ –∑–∞–¥–∞—á–∞ ‚Äî —É–≥–∞–¥–∞—Ç—å —ç—Ç–æ —Å–ª–æ–≤–æ.\n\n"
        "–í—ã –¥–æ–ª–∂–Ω—ã –æ—Ç–ø—Ä–∞–≤–ª—è—Ç—å —Ä–µ–∞–ª—å–Ω—ã–µ —Å–ª–æ–≤–∞ –∏–∑ 5 –±—É–∫–≤. –ë–æ—Ç –æ—Ç–≤–µ—Ç–∏—Ç, –∫–∞–∫–∏–µ –±—É–∫–≤—ã –ø–æ–¥—Ö–æ–¥—è—Ç:\n"
        "üü• ‚Äî —Ç–∞–∫–æ–π –±—É–∫–≤—ã –Ω–µ—Ç –≤ —Å–ª–æ–≤–µ.\n"
        "üü® ‚Äî –±—É–∫–≤–∞ –µ—Å—Ç—å, –Ω–æ –≤ –¥—Ä—É–≥–æ–º –º–µ—Å—Ç–µ.\n"
        "üü© ‚Äî –±—É–∫–≤–∞ –∏ –µ—ë –ø–æ–∑–∏—Ü–∏—è –≤–µ—Ä–Ω—ã.\n\n"
        "–ò–≥—Ä–∞ –∑–∞–∫–æ–Ω—á–∏—Ç—Å—è, –∫–æ–≥–¥–∞ –≤—ã –Ω–∞–π–¥—ë—Ç–µ –≤—Å–µ 5 –±—É–∫–≤.\n"
        "–£–¥–∞—á–∏, –∏–≥—Ä–æ–∫–∏! üçÄ",
        parse_mode="HTML",reply_markup=kb.play
    )

@router.message(Command("game"))
async def game(message : Message,state : FSMContext):
    await message.delete()
    id = message.from_user.id
    if await state.get_state() != None:
        await message.answer("–ù–∞ –¥–∞–Ω–Ω—ã–π –º–æ–º–µ–Ω—Ç –≤—ã –≤—ã–ø–æ–ª–Ω—è–µ—Ç–µ –¥—Ä—É–≥—É—é –æ–ø—Ü–∏—é –∏ –Ω–µ –º–æ–∂–µ—Ç–µ –≤–æ—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å—Å—è —ç—Ç–æ–π –∫–æ–º–∞–Ω–¥–æ–π ‚ùå")
        return
    msg = await message.answer("–ñ–¥–µ–º —á—Ç–æ–±—ã AI —Å–¥–µ–ª–∞–ª —Å–ª–æ–≤–æ... ü§ñ")
    word = await generate()
    if word == "*****":
        await msg.edit_text("–ù–∞–º –æ—á–µ–Ω—å –∂–∞–ª—å, –Ω–æ —á—Ç–æ —Ç–æ –ø–æ—à–ª–æ –Ω–µ —Ç–∞–∫ ü´§")
        return
    await state.set_state(st.Game)
    await state.update_data(word=word,lifes=6)
    await msg.edit_text("–ò–≥—Ä–∞ –Ω–∞—á–∞–ª–∞—Å—å ! üé∞\n–ú–æ–∂–µ—Ç–µ —Å–∫–∏–¥—ã–≤–∞—Ç—å —Å–ª–æ–≤–∞ !",reply_markup=kb.out_game)

@router.message(st.Game,F.text)
async def playing(message : Message,state : FSMContext):
    text = message.text.strip().lower()
    id = message.from_user.id
    data = await state.get_data()
    word = data["word"]
    lifes = data["lifes"]
    if len(text) != 5: 
        await message.reply("–≠—Ç–æ —Å–ª–æ–≤–æ –Ω–µ –ø–æ–¥—Ö–æ–¥–∏—Ç ‚ùå\n–û–Ω–æ –¥–æ–ª–∂–Ω–æ —Å–æ—Å—Ç–æ—è—Ç—å –∏–∑ 5 –±—É–∫–≤ !",reply_markup=kb.out_game)
        return
    word = word.strip().lower()
    ans = ["üü•"] * 5
    used = [False] * 5
    for i in range(5):
        if text[i] == word[i]:
            ans[i] = "üü©"
            used[i] = True
    for i in range(5):
        if ans[i] == "üü©":
            continue 
        for j in range(5):
            if not used[j] and text[i] == word[j]:
                ans[i] = "üü®"
                used[j] = True
                break
    res = "".join(ans)
    if await rq.is_infinity(id):
        if text == word:
            await state.clear()
            await rq.change_inf_games(id,-1)
            await message.answer(f"–û—Ç–ª–∏—á–Ω–∞—è —Ä–∞–±–æ—Ç–∞, —Ç—ã —É–≥–∞–¥–∞–ª —Å–ª–æ–≤–æ ! ‚úÖ\n–ó–∞ –±–µ—Å–∫–æ–Ω–µ—á–Ω—ã–π —Ä–µ–∂–∏–º —É —Ç–µ–±—è <b>+0.5 ‚≠êÔ∏è</b> –ï—Å–ª–∏ —Ö–æ—á–µ—à—å –∏–≥—Ä–∞—Ç—å –µ—â–µ –Ω–∞–∂–º–∏ –Ω–∞ –∫–Ω–æ–ø–∫—É –Ω–∏–∂–µ ‚§µÔ∏è",reply_markup=kb.base_inline,parse_mode="HTML")
            return
        await message.answer(f"–ù–µ–º–Ω–æ–∂–∫–æ –Ω–µ –ø–æ–≤–µ–∑–ª–æ !\n–¢–≤–æ–µ —Å–ª–æ–≤–æ: {res}",reply_markup=kb.out_game)
    else:
        if text == word:
            await state.clear()
            await rq.change_simple_games(id,-1)
            await message.answer(f"–û—Ç–ª–∏—á–Ω–∞—è —Ä–∞–±–æ—Ç–∞, —Ç—ã —É–≥–∞–¥–∞–ª —Å–ª–æ–≤–æ ! ‚úÖ\n–ó–∞ –æ–±—ã—á–Ω—ã–π —Ä–µ–∂–∏–º —É —Ç–µ–±—è <b>+1.0 ‚≠êÔ∏è\n</b> –ï—Å–ª–∏ —Ö–æ—á–µ—à—å –∏–≥—Ä–∞—Ç—å –µ—â–µ –Ω–∞–∂–º–∏ –Ω–∞ –∫–Ω–æ–ø–∫—É –Ω–∏–∂–µ ‚§µÔ∏è",reply_markup=kb.base_inline,parse_mode="HTML")
            return
        lifes -= 1
        if lifes == 0:
            await message.answer(f"–¢–≤–æ–∏ –∂–∏–∑–Ω–∏ –∑–∞–∫–æ–Ω—á–∏–ª–∏—Å—å, —Ç—ã –ø—Ä–æ–∏–≥—Ä–∞–ª !\n–ó–∞–≥–∞–¥–∞–Ω–Ω–æ–µ —Å–ª–æ–≤–æ : {word}",reply_markup=kb.base_inline)
            await state.clear()
            return
        await message.answer(f"–ù–µ–º–Ω–æ–∂–∫–æ –Ω–µ –ø–æ–≤–µ–∑–ª–æ !\n–¢–≤–æ–µ —Å–ª–æ–≤–æ: {res}\n–û—Å—Ç–∞–ª–æ—Å—å –∂–∏–∑–Ω–µ–π : {lifes}",reply_markup=kb.out_game)